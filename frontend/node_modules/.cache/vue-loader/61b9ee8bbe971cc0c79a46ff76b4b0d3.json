{"remainingRequest":"C:\\leo\\github\\neowrk\\desafio-neowrk-leonardo-reblin\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\leo\\github\\neowrk\\desafio-neowrk-leonardo-reblin\\frontend\\src\\views\\Home.vue?vue&type=style&index=0&id=fae5bece&scoped=true&lang=css&","dependencies":[{"path":"C:\\leo\\github\\neowrk\\desafio-neowrk-leonardo-reblin\\frontend\\src\\views\\Home.vue","mtime":1634450371329},{"path":"C:\\leo\\github\\neowrk\\desafio-neowrk-leonardo-reblin\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\leo\\github\\neowrk\\desafio-neowrk-leonardo-reblin\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\leo\\github\\neowrk\\desafio-neowrk-leonardo-reblin\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\leo\\github\\neowrk\\desafio-neowrk-leonardo-reblin\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\leo\\github\\neowrk\\desafio-neowrk-leonardo-reblin\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmhvbWUgew0KICBwYWRkaW5nOiAzMHB4Ow0KfQ0K"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoHA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <v-container>\r\n    <div class=\"home\">\r\n      <v-data-table\r\n        :headers=\"headers\"\r\n        :items.sync=\"books\"\r\n        hide-default-footer\r\n        class=\"elevation-1\"\r\n      >\r\n        <template v-slot:item=\"row\">\r\n          <tr>\r\n            <td>{{ row.item.title }}</td>\r\n            <td>{{ row.item.author }}</td>\r\n            <td>{{ row.item.pages }}</td>\r\n            <td>{{ row.item.publisher }}</td>\r\n            <td>\r\n              <v-btn @click=\"borrowBook(row.item.id)\">Pegar</v-btn>\r\n            </td>\r\n          </tr>\r\n        </template>\r\n      </v-data-table>\r\n\r\n      <v-snackbar v-model=\"snackbar\">\r\n        {{ errorMessage }}\r\n\r\n        <template v-slot:action=\"{ attrs }\">\r\n          <v-btn v-bind=\"attrs\" @click=\"snackbar = false\"> Close </v-btn>\r\n        </template>\r\n      </v-snackbar>\r\n    </div>\r\n    <Loading :active.sync=\"loading\" :is-full-page=\"true\"></Loading>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport bookApi from \"@/api/book\";\r\nimport Loading from \"vue-loading-overlay\";\r\nimport \"vue-loading-overlay/dist/vue-loading.css\";\r\n\r\nexport default {\r\n  name: \"Home\",\r\n\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      snackbar: false,\r\n      errorMessage: \"\",\r\n      headers: [\r\n        {\r\n          text: \"Titulo\",\r\n          align: \"start\",\r\n          sortable: false,\r\n          value: \"title\",\r\n        },\r\n        { text: \"Autor\", value: \"author\" },\r\n        { text: \"Nº Páginas\", value: \"pages\" },\r\n        { text: \"Editora\", value: \"editor\" },\r\n        { text: \"\", value: \"\" },\r\n      ],\r\n      books: [],\r\n    };\r\n  },\r\n  async mounted() {\r\n    try {\r\n      this.loading = true;\r\n      await this.listBooks();\r\n    } catch (err) {\r\n      console.log(err);\r\n      this.errorMessage = err.message;\r\n      this.snackbar = true;\r\n      if(err.message.includes('401')){\r\n        this.$router.push('/login');\r\n      }\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  },\r\n  methods: {\r\n    async borrowBook(id) {\r\n      try {\r\n        this.loading = true;\r\n        const responseData = await bookApi.borrowBook(id);\r\n        console.log(responseData);\r\n        if(responseData.success == false) {\r\n          responseData.messages.forEach(element => {\r\n            this.errorMessage = element;\r\n            this.snackbar = true;           \r\n          });\r\n        } else {\r\n          this.errorMessage = responseData.messages[0];\r\n          this.snackbar = true;\r\n        }\r\n        await this.listBooks();\r\n      } catch (err) {\r\n        console.log(err);\r\n        this.errorMessage = err.message;\r\n        this.snackbar = true;\r\n        if(err.message.includes('401')) {\r\n          this.$router.push('/login');\r\n        }\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    async listBooks() {\r\n      const allBooks = await bookApi.listBooks();\r\n      this.books = allBooks.data;\r\n    },\r\n  },\r\n  components: {\r\n    Loading,\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.home {\r\n  padding: 30px;\r\n}\r\n</style>\r\n"]}]}